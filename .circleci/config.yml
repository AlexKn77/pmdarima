version: 2

test-filters: &test-filters
    tags:
        only: /.*/
    branches:
        only: /.*/

jobs:
  # For testing PyPy rather than CPython
  pypy36:
    docker:
      - image: pypy:3-6.0.0
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
          - pypy3-ccache-{{ .Branch }}
          # fallback to using the latest cache if no exact match is found
          - pypy3-ccache

      - checkout
      - run: ./build_tools/circle/before_install.sh
      - run: ./build_tools/circle/build_test_pypy.sh
      - save_cache:
          key: pypy3-ccache-{{ .Branch }}-{{ .BuildNum }}
          paths:
            - ~/.ccache
            - ~/.cache/pip

  cpython36:
    docker:
      - image: python:3.6
    working_directory: ~/pmdarima
    steps:
    - checkout
    - run: make develop
    - run: make test-unit
    - run: codecov || echo "codecov upload failed"

  cpython37:
    docker:
      - image: python:3.7
    working_directory: ~/pmdarima
    steps:
    - checkout
    - run: make develop
    - run: make test-unit
    - run: codecov || echo "codecov upload failed"

   cpython36-benchmarking:
    docker:
      - image: python:3.6
    working_directory: ~/pmdarima
    steps:
    - checkout
    - run: make develop
    - run: test-benchmark
    - run: codecov || echo "codecov upload failed"

  cpython37-benchmarking:
    docker:
      - image: python:3.7
    working_directory: ~/pmdarima
    steps:
    - checkout
    - run: make develop
    - run: test-benchmark
    - run: codecov || echo "codecov upload failed"

  # For testing lint
  test-linting:
    docker:
      - image: python:3.6
    working_directory: ~/pmdarima
    steps:
    - checkout
    - run: make test-lint

  # Regression testing for switch-over to new pmdarima namespace
  regression-testing:
    docker:
      - image: python:3.6
    working_directory: ~/pmdarima
    steps:
    - checkout
    - run: ./build_tools/circle/before_install.sh
    - run: ./build_tools/circle/regression_testing.sh

  # Simple job that passes when all other tests have passed
  testing-passed:
      docker:
        - image: bash:latest
      steps:
        - run:
            name: pmdarima Testing passed
            command: echo "All tests passed"

  # For documentation deployment. You'll need the following environment vars
  # in your Circle CI settings, otherwise this will not work.
  #
  # GH_NAME (your git username)
  # GH_EMAIL (your git email)
  # GH_TOKEN (the personal Git token with pushes enabled)
  deploy-doc:
    docker:
    - image: python:3.6
    working_directory: ~/pmdarima
    steps:
    - checkout
    - run: ./build_tools/circle/before_install.sh
    - run: make doc-requirements
    - run: make install
    - run: ./build_tools/circle/build_push_doc.sh

workflows:
  version: 2
  pmdarima-pipeline:
    jobs:
        # All testing jobs
        - pypy36:
            filters: *test-filters
        - cpython36:
            filters: *test-filters
        - cpython37:
            filters: *test-filters
        - cpython36-benchmarking:
            filters: *test-filters
        - cpython37-benchmarking:
            filters: *test-filters
        - test-linting:
            filters: *test-filters
        - regression-testing:
            filters: *test-filters
        - testing-passed:
            requires:
                - pypy36
                - cpython36
                - cpython37
                - test-linting
                - regression-testing
            filters: *test-filters

        # All deployment jobs
        - deploy-doc:
            requires:
                - testing-passed
