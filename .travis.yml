sudo: required
language: python

cache:
  apt: true
  directories:
  - $HOME/.cache/pip
  - $HOME/.ccache

dist: trusty

before_install: source build_tools/travis/before_install.sh

env:
  global:
    # Directory where tests are run from
    - TEST_DIR=/tmp/pyramid
    - OMP_NUM_THREADS=4
    - OPENBLAS_NUM_THREADS=4

matrix:
  include:
    # This environment tests the oldest supported anaconda env. Except some of these (i.e., statsmodels
    # and sklearn) require higher versions of numpy, so cannot really test *actual* oldest...
    - env: DISTRIB="conda" PYTHON_VERSION="2.7" INSTALL_MKL="false"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.23.5"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.17.1" STATSMODELS_VERSION="0.8"
    # This environment tests the newest supported Anaconda release (4.4.0)
    - env: DISTRIB="conda" PYTHON_VERSION="3.6.1" INSTALL_MKL="true"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
    # This environment use pytest to run the tests. It uses the newest
    # supported Anaconda release (4.4.0).
    - env: USE_PYTEST="true" DISTRIB="conda" PYTHON_VERSION="3.6.1" INSTALL_MKL="true"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=false SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
  allow_failures:
    # allow_failures seems to be keyed on the python version
    # We are using this to allow failures for DISTRIB=scipy-dev-wheels
    - python: 3.5

install: source build_tools/travis/install.sh
before_script:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 5 # give xvfb some time to start by sleeping for 5 seconds
script: bash build_tools/travis/test_script.sh
after_success: source build_tools/travis/after_success.sh
