# The Travis build will test both Linux AND OSX distributions, but language needs to be
# overridden to "generic" for Mac, otherwise the build will fail until Python is downloaded
# via Homebrew (which is handled in the before_install.sh). Note that none of the test envs
# or wheels test/create artifacts on <64 bit Linux or Mac. All artifacts are 64-bit ONLY.
language: python
sudo: required

cache:
  apt: true
  directories:
  - $HOME/.cache/pip
  - $HOME/.ccache

before_install: source build_tools/travis/before_install.sh
env:
  global:
    # Directory where tests are run from
    - TEST_DIR=/tmp/pyramid
    - OMP_NUM_THREADS=4
    - OPENBLAS_NUM_THREADS=4
  matrix:
    # Build 32- & 64-bit machines
    - MACHINE_BITS="x86_64"
    - MACHINE_BITS="x86"

matrix:
  include:
    # This environment tests the oldest supported anaconda env. Except some of these (i.e., statsmodels
    # and sklearn) require higher versions of numpy, so cannot really test *actual* oldest... this also
    # tests against linux.
    - os: linux
      dist: trusty
      env: DISTRIB="conda" PYTHON_VERSION="2.7" CYTHON_VERSION="0.23.5"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.17.1" DEPLOY=true
           CACHEC=true

    # This environment tests the same conditions as above, but tests against MAC OS X
    - os: osx
      language: generic
      env: DISTRIB="conda" PYTHON_VERSION="2.7" CYTHON_VERSION="0.23.5"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.17.1" DEPLOY=true
           CACHEC=false

    # This environment tests Python 3.5 support on linux
    - os: linux
      dist: trusty
      env: DISTRIB="conda" PYTHON_VERSION="3.5" INSTALL_MKL="true"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
           DEPLOY=true CACHEC=true

    # This environment tests Python 3.5 support on MAC OS X
    - os: osx
      language: generic
      env: DISTRIB="conda" PYTHON_VERSION="3.5" INSTALL_MKL="true"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
           DEPLOY=true CACHEC=false

    # This environment tests the newest supported Anaconda release (4.4.0) and
    # runs on linux
    - os: linux
      dist: trusty
      env: DISTRIB="conda" PYTHON_VERSION="3.6.1" INSTALL_MKL="true"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
           DEPLOY=false CACHEC=true

    # This environment use pytest to run the tests. It uses the newest
    # supported Anaconda release (4.4.0) and tests with pytests instead of nosetests.
    # This test runs on linux.
    - os: linux
      dist: trusty
      env: USE_PYTEST="true" DISTRIB="conda" PYTHON_VERSION="3.6.1" INSTALL_MKL="true"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=false SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
           DEPLOY=false CACHEC=true

install: source build_tools/travis/install.sh
before_script: bash build_tools/travis/before_script.sh
script: bash build_tools/travis/test_script.sh
after_success: source build_tools/travis/after_success.sh

notifications:
  slack:
    rooms:
    - tgsmith61591-gh:mWyfLXzxRAHCKD2QRHWvHZaX#pyramid-cicd
    on_success: always
    on_failure: always
    on_pull_requests: true

deploy:
  provider: pypi
  user: tgsmith61591.gh
  password:
    secure: qRlN//K2Oa3m0xu0C4T9hJB/G/kwvYn5hwzH6dy72tz4ERLjjCf8MrAawRzpsDkF1MG4k8f8m7IFlbo3F7f7exDI7r2gPlKe6bD0dm0NtLvkuzpcFFJEYk8JqUa/Ft5XKLUxrKh0YlLf83V5SGo/8jwF25joaPMutEym/T1CfZdsDkx6SKvqy9OUfr65G41IvhlYLzX8ShkSRnWCNO3XzAScwutEuESvOd9BkGga9sGtf7zpWX0k1AAr4ePIvpwGtpgrAZ0uAID9fHtpEq7F9fEq7i0gjdPUz77TSSnGH6wUZkQ0jSjW1igiI9ADAAKBdl4ynPellJlujEV671MaTExFx3D2hawUtNnhISYi+rXycxI0Q4T1VkIs4nMaJrfnquaFVJCw9qyMm5vbw+YSlBHjwSOCB05dBLcRfuOlFY4ZpDSt3MYTdD9jolRlDIpy2WIZO1E0YaYcaIp22aLNc93njdCAnjUDaFQBK6QQO/WI+OIM7ZJIHbiCbUHug2pDVND5LpFKc4V/gFD50x/iZYmFF+TheTuDzfGoixD3krwSk5fKyTuXnnj9T3FpT4KaPnoRLbnTK0KQJsvyoY1YxExGc8KemdNjWlxho1E+Zxy2RFih6I2xptwoFoKWj1b+5IraKqPc2IVBBDDCBKtWvwMf3tqwMtHQmQcMU6Z0JsU=
  #server: https://test.pypi.org/legacy/ # Upload to pypi test server
  distributions: "bdist_wheel" # Upload .whl files only.
  skip_upload_docs: true
  skip_cleanup: true # release artifacts as well
  on:
    #branch: release-0.5
    tags: true # Upload on tagged releases
    condition: "$DEPLOY = true"
