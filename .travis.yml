# The Travis build will test both Linux AND OSX distributions, but language needs to be
# overridden to "generic" for Mac, otherwise the build will fail until Python is downloaded
# via Homebrew (which is handled in the before_install.sh). Note that none of the test envs
# or wheels test/create artifacts on <64 bit Linux or Mac. All artifacts are 64-bit ONLY.
language: python
sudo: required

cache:
  apt: true
  directories:
  - $HOME/.cache/pip
  - $HOME/.ccache

before_install: source build_tools/travis/before_install.sh
env:
  global:
    # Directory where tests are run from
    - PYMODULE=pyramid
    - TEST_DIR=/tmp/pyramid
    - OMP_NUM_THREADS=4
    - OPENBLAS_NUM_THREADS=4

matrix:
  include:
    # This environment tests the oldest supported anaconda env. Except some of these (i.e., statsmodels
    # and sklearn) require higher versions of numpy, so cannot really test *actual* oldest... this also
    # tests against linux.
    - os: linux
      dist: trusty
      services:
        - docker
      env: DISTRIB="conda" PYTHON_VERSION="2.7" CYTHON_VERSION="0.23.5"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.17.1" DEPLOY=true CACHEC=true
           DOCKER_IMAGE="quay.io/pypa/manylinux1_x86_64" DOCKER_CONTAINER_NAME="pyramidcontainer"

    # This environment tests the same conditions as above, but tests against MAC OS X,
    # using virtualenv instead of the conda python distribution
    - os: osx
      language: generic
      env: DISTRIB="virtualenv" PYTHON_VERSION="2.7" CYTHON_VERSION="0.23.5"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.17.1" DEPLOY=true CACHEC=false

    # This environment tests Python 3.5 support on linux
    - os: linux
      dist: trusty
      services:
        - docker
      env: DISTRIB="conda" PYTHON_VERSION="3.5" INSTALL_MKL="true"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
           DEPLOY=true CACHEC=true DOCKER_IMAGE="quay.io/pypa/manylinux1_x86_64"
           DOCKER_CONTAINER_NAME="pyramidcontainer" BUILD_TAR=true

    # This environment tests Python 3.5 support on MAC OS X, using virtualenv
    # instead of the conda python distribution
    - os: osx
      language: generic
      env: DISTRIB="virtualenv" PYTHON_VERSION="3.5"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
           DEPLOY=true CACHEC=false

    # This environment tests the newest supported Anaconda release (4.4.0) and
    # runs on linux
    - os: linux
      dist: trusty
      env: DISTRIB="conda" PYTHON_VERSION="3.6.1" INSTALL_MKL="true"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=true SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
           DEPLOY=false CACHEC=true

    # This environment use pytest to run the tests. It uses the newest
    # supported Anaconda release (4.4.0) and tests with pytests instead of nosetests.
    # This test runs on linux.
    - os: linux
      dist: trusty
      env: USE_PYTEST="true" DISTRIB="conda" PYTHON_VERSION="3.6.1" INSTALL_MKL="true"
           NUMPY_VERSION="1.12.1" SCIPY_VERSION="0.19.0" CYTHON_VERSION="0.25.2"
           COVERAGE=false SCIKIT_LEARN_VERSION="0.18" STATSMODELS_VERSION="0.8"
           DEPLOY=false CACHEC=true

install: source build_tools/travis/install.sh
before_script: bash build_tools/travis/before_script.sh
script: bash build_tools/travis/test_script.sh
after_success:
  - source build_tools/travis/after_success.sh
  # This is just for testing - later, put in the deploy section
  - bash build_tools/travis/build_wheels.sh
  - ls dist/

notifications:
  slack:
    rooms:
    - tgsmith61591-gh:mWyfLXzxRAHCKD2QRHWvHZaX#pyramid-cicd
    on_success: always
    on_failure: always
    on_pull_requests: true

deploy:
  #server: https://test.pypi.org/legacy/ # Upload to pypi test server
  # script:
  #   - bash build_tools/travis/build_wheels.sh
  #   - ls dist/
  #   - python -m twine upload --skip-existing dist/*
  skip_upload_docs: true
  skip_cleanup: true # release artifacts as well
  on:
    tags: true # Upload on tagged releases
    condition: "$DEPLOY = true"
  provider: pypi
  user: tgsmith61591.gh
  password:
    secure: TnuFYjjfLIZFMvIpt+KXhG7eeMf+KahTFKz3TE5o6obQXI9uxhN+2m4DX48QCJf2bAGxEKkLe9frXVM+Y/NUBm80sBIv4KvbmZkayMT4TZiJRzntIrsJCzem3jgExP1YUsSqrrmED7tvWpIZEqSJe+eUwHbsTAGhVBIz9mk7/CAP5UR8+0Oe+QKgjkX2VN/psoHOfFFQYTtE3L4pO05UlvyNIzNkrZ8WQ0PZ6wLHSIUCTC8ACFSzH9qWshYZ3+NVEX89l32V8A83nwV7k11yRonpXsSsrmsFYEDFf2h5b1it3VrOatwoNSMfUT+yvzhwuG2ibQv9dr/9mjlZl35VW1lE4qe2512FlVkTojATSVcMEz7cf1ZQdHtVYryqTOcyW9IgvZUJQoggMRSJLR9nLwxeSG1tfbN8NE3SQxnzeGxD+wz/XL26Tk5s9klQe7nI+rEXIR8lrN7zlOR7y9DQI7PiDHkbiIsy60p5Bi+0/pIrYaogCm7FuA4+23Y5m8Iv0/whWB3UIw5o6pVEzRnjdldeD37cLHfLLgwAU0fLnsT7Zdhc4chQhzfeTAy0o3LjdF0f8/vGnngqyxIvk+i/SrNibfB8fMWeduKse8z5mOU+eeLxqorbvyqPTHv0KG/6cBacOOHoSuwspxW1XQnBJp1R2GLSUOuHM9y3ScNrnpU=
